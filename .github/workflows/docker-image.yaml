name: Build and Push Docker image

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: fenadmin/telegram_bot:latest
    
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Check working dir
      run: pwd
    - name: Check file structure
      run: ls -R
    - name: Check file structure stock-screener
      run: ls .. -R

    - name: Deploy stack to Portainer
      run: |
        echo "Starting deployment process..."
        TOKEN=$(curl -s -X POST "http://${{ secrets.PORTAINER_URL }}/api/auth" -H "Content-Type: application/json" -d '{"username": "${{ secrets.PORTAINER_USERNAME }}", "password": "${{ secrets.PORTAINER_PASSWORD }}"}' | jq -r .jwt)
        curl -X POST "http://${{ secrets.PORTAINER_URL }}/api/stacks" \
        -H "Content-Type: application/json" \
        -H "Authorization: Bearer $TOKEN" \
        --data-binary @docker-compose.yml  # Update with your path

    - name: Update stack in Portainer
      run: |
        curl -X PUT "http://${{ secrets.PORTAINER_URL }}/api/stacks/1" \
        -H "Authorization: Bearer $TOKEN" \
        -H "Content-Type: application/json" \
        --data-binary @docker-compose.yml  # Update with your path
  