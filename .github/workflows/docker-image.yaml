name: Build and Push Docker image

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: fenadmin/telegram_bot:latest

  deploy:
    name: Deploy to Portainer
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Deploy Stack to Portainer
      env:
        PORTAINER_URL: ${{ secrets.PORTAINER_URL }}
        PORTAINER_USERNAME: ${{ secrets.PORTAINER_USERNAME }}
        PORTAINER_PASSWORD: ${{ secrets.PORTAINER_PASSWORD }}
        ENDPOINT_ID: ${{ secrets.ENDPOINT_ID }}
        STACK_ID: ${{ secrets.STACK_ID }}
        COMPOSE_FILE_PATH: ${{ secrets.COMPOSE_FILE_PATH }}
        DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        IMAGE_TAG: latest
      run: |
        # Prepare payload
        PAYLOAD=$(jq -n \
          --argjson env "{\"username\":\"$DOCKER_HUB_USERNAME\"}" \
          --arg composeFile "$(cat $COMPOSE_FILE_PATH)" \
          --arg endpointId "$ENDPOINT_ID" \
          --arg image "$DOCKER_HUB_USERNAME/telegram-bot:$IMAGE_TAG" \
          '{StackFileContent: $composeFile, Env: [$env], Prune: true}')

        PORTAINER_API_KEY=$(curl -s -X POST "$PORTAINER_URL/api/auth" -H "Content-Type: application/json" -d '{"username": "$PORTAINER_USERNAME", "password": "$PORTAINER_PASSWORD"}' | jq -r .jwt)

        # If stack exists, update it, otherwise create a new stack
        if [ -n "$STACK_ID" ]; then
          curl -X PUT "$PORTAINER_URL/api/stacks/$STACK_ID?endpointId=$ENDPOINT_ID" \
            -H "Authorization: Bearer $PORTAINER_API_KEY" \
            -H "Content-Type: application/json" \
            --data "$PAYLOAD"
        else
          curl -X POST "$PORTAINER_URL/api/stacks?type=2&method=string&endpointId=$ENDPOINT_ID" \
            -H "Authorization: Bearer $PORTAINER_API_KEY" \
            -H "Content-Type: application/json" \
            --data "$PAYLOAD"
        fi